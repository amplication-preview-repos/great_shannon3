/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { SportsWhereUniqueInput } from "../../sports/base/SportsWhereUniqueInput";
import { ChannelsWhereUniqueInput } from "../../channels/base/ChannelsWhereUniqueInput";

@InputType()
class PostsWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  content?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  uniqueHash?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  title?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => SportsWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SportsWhereUniqueInput)
  @IsOptional()
  @Field(() => SportsWhereUniqueInput, {
    nullable: true,
  })
  sport?: SportsWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ChannelsWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ChannelsWhereUniqueInput)
  @IsOptional()
  @Field(() => ChannelsWhereUniqueInput, {
    nullable: true,
  })
  channel?: ChannelsWhereUniqueInput;
}

export { PostsWhereInput as PostsWhereInput };
